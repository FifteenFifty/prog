{"version":3,"sources":["App.js","web-build/register-service-worker.js"],"names":["App","defaultState","difficulty","ticks","target","pc","running","motivation","state","JSON","parse","localStorage","getItem","e","console","log","setInterval","tick","this","setState","toFixed","setItem","stringify","motivate","gameData","Math","floor","random","length","ev","data","parent","difficulties","removeItem","url","Platform","OS","window","open","Linking","openURL","midSection","style","styles","progress","percent","label","color","resetButton","content","onClick","reset","buttons","Object","entries","key","value","push","animated","chooseDifficulty","Content","visible","title","hidden","description","titleSubtext","chooseDifficultyButtons","complete","marginBottom","container","titleText","footer","fontSize","hyperlink","onPress","goToUrl","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","flexDirection","navigator","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"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","file":"static/js/app.0e9c8520.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Platform, Linking, StyleSheet, Text, View } from 'react-native';\nimport { Progress, Button } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport gameData from \"./data.json\";\n\nexport default class App extends Component {\n  defaultState = {\n    difficulty: \"\",\n    ticks:      0,\n    target:     0,\n    pc:         0,\n    running:    false,\n    motivation: \"Are you excited? I bet you are\"\n  }\n\n  constructor() {\n    super();\n    try {\n      this.state = JSON.parse(localStorage.getItem(\"ProgState\"))\n    } catch (e) {\n      this.state = null;\n    }\n\n    if (!this.state) {\n      console.log(\"Hello\");\n      this.state = Object.assign({}, this.defaultState)\n    }\n\n    setInterval( () => { this.tick(); }, 1000);\n  }\n\n  tick() {\n    if (this.state.running) {\n      this.state.ticks++;\n      this.setState({\n        pc: ((this.state.ticks / this.state.target) * 100).toFixed(5)\n      });\n\n      // Save the game\n      localStorage.setItem(\"ProgState\", JSON.stringify(this.state));\n\n      // Motivate the player\n      if (this.state.ticks % 5 === 0) {\n        // Choose a random motivation\n        var motivate = gameData.motivation[Math.floor(Math.random() *\n                                           gameData.motivation.length)];\n        this.setState({\n          motivation: motivate\n        });\n      }\n    }\n  }\n\n  chooseDifficulty(ev, data) {\n    data.parent.setState({\n      difficulty: data.difficulty,\n      ticks:      0,\n      target:     gameData.difficulties[data.difficulty].target,\n      pc:         0,\n      running:    true,\n      motivation: \"Let's go!\"\n    });\n  }\n\n  reset(ev, data) {\n    data.parent.setState(Object.assign({}, data.parent.defaultState))\n    // Unsave the game\n    localStorage.removeItem(\"ProgState\");\n  }\n\n  goToUrl(url) {\n    if (Platform.OS === \"web\") {\n      window.open(url, \"_blank\");\n    } else {\n      Linking.openURL(url)\n    }\n  }\n\n  render() {\n    var midSection = <View style={styles.progress}>\n      <Progress percent={this.state.pc}\n                               label={this.state.pc + \"%\"}\n                               color=\"teal\"/>\n      <View style={styles.resetButton}>\n        <Button content=\"Reset\"\n                onClick={this.reset}\n                parent={this} />\n      </View>\n    </View>;\n\n    if (this.state.target === 0) {\n      // User has not picked a mode yet!\n      var buttons = [];\n\n      for (const [key, value] of Object.entries(gameData.difficulties)) {\n        buttons.push(\n          <Button animated=\"fade\"\n                  onClick={this.chooseDifficulty}\n                  difficulty={key}\n                  parent={this}>\n            <Button.Content visible>\n              { value.title }\n            </Button.Content>\n            <Button.Content hidden>\n              { value.description }\n            </Button.Content>\n          </Button>\n        );\n      }\n\n      midSection = <View style={styles.chooseDifficulty}>\n        <Text style={styles.titleSubtext}>\n          Choose a difficulty (hover for more info)\n        </Text>\n        <View style={styles.chooseDifficultyButtons}>\n          { buttons }\n        </View>\n      </View>;\n    } else if (this.state.ticks >= this.state.target) {\n      midSection = <View style={styles.complete}>\n        <Text style={{marginBottom: 10}}>\n          ðŸŽˆ Good job, you did it! ðŸŽˆ\n        </Text>\n        <Text style={{marginBottom: 20}}>\n          Why not try again on a harder difficulty?\n        </Text>\n        <Button content=\"I'd love to\"\n                onClick={this.reset}\n                parent={this} />\n        </View>;\n    }\n\n    return (\n      <View style={styles.container}>\n        <View style={styles.title}>\n          <Text style={styles.titleText}>\n            Prog\n          </Text>\n          <Text style={styles.titleSubtext}>\n            A game that exists because some guy on Reddit said something like\n          </Text>\n          <Text>\n            \"I just want to press Play and not bother with anything else\"\n          </Text>\n        </View>\n\n        { midSection }\n\n        <View style={styles.motivation}>\n          <Text>\n            { this.state.motivation }\n          </Text>\n        </View>\n\n        <View style={styles.footer}>\n          <Text style={{fontSize: 10}}>\n            Love this game? Why not{' '}\n          </Text>\n          <Text style={styles.hyperlink}\n                onPress={() => this.goToUrl(\"https://paypal.me/FifteenFifty\")}>\n            donate\n          </Text>\n          <Text style={{fontSize: 10}}>\n            {' '}or{' '}\n          </Text>\n          <Text style={styles.hyperlink}\n                onPress={() => this.goToUrl(\"https://github.com/FifteenFifty/prog/\")}>\n            contribute\n          </Text>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  titleText: {\n    fontSize: 72,\n    marginBottom: 20,\n  },\n  titleSubtext: {\n    marginBottom: 10,\n  },\n  title: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  chooseDifficulty: {\n    width: \"80%\",\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  chooseDifficultyButtons: {\n    flexDirection: 'column',\n  },\n  progress: {\n    flex: 1,\n    width: \"80%\",\n    backgroundColor: '#fff',\n    justifyContent: 'center',\n  },\n  resetButton: {\n    alignItems: 'center',\n  },\n  motivation: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  complete: {\n    alignItems: 'center'\n  },\n  footer: {\n    flexDirection: \"row\",\n  },\n  hyperlink: {\n    fontSize: 10,\n    color:    \"teal\"\n  }\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/prog/expo-service-worker.js', { scope: '/prog/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}